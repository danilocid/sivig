mode: increment
blade-directive: version
current:
  label: v
  major: 0
  minor: 1
  patch: 1
  prerelease: null
  buildmetadata: null
  commit: 1e7acc5
  timestamp:
    year: 2022
    month: 5
    day: 1
    hour: 22
    minute: 55
    second: 58
    timezone: America/Santiago
commit:
  mode: absorb
  length: 7
  increment-by: 1
git:
  from: local
  commit:
    local: 'git rev-parse --verify HEAD'
    remote: 'git ls-remote {$repository}'
  branch: refs/heads/main
  repository: ''
  version:
    local: 'git describe --tags'
    remote: 'git ls-remote {$repository} | grep tags/ | grep -v {} | cut -d / -f 3 | sort --version-sort | tail -1'
    matcher: '/^(?P<label>[v|V]*[er]*[sion]*)[\.|\s]*(?P<major>0|[1-9]\d*)\.(?P<minor>0|[1-9]\d*)\.(?P<patch>0|[1-9]\d*)(?:-(?P<prerelease>(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/'
  timestamp:
    local: 'git show -s --format=%ci'
    remote: 'git show -s --format=%ci origin/main'
format:
  regex:
    optional_bracket: '\[(?P<prefix>.*?)(?P<spaces>\s*)(?P<delimiter>\?\=)(?P<optional>.*?)\]'
  label: '{$label}'
  major: '{$major}'
  minor: '{$minor}'
  patch: '{$patch}'
  prerelease: '{$prerelease}'
  buildmetadata: '{$buildmetadata}'
  commit: '{$commit}'
  version: 'version {$major}.{$minor}.{$patch} (commit {$commit})'
  version-only: 'version {$major}.{$minor}.{$patch}.{$commit}'
  full: '{$version-only}[.?={$prerelease}][+?={$buildmetadata}] (commit {$commit})'
  compact: 'v{$major}.{$minor}.{$patch}'
  timestamp-year: '{$timestamp.year}'
  timestamp-month: '{$timestamp.month}'
  timestamp-day: '{$timestamp.day}'
  timestamp-hour: '{$timestamp.hour}'
  timestamp-minute: '{$timestamp.minute}'
  timestamp-second: '{$timestamp.second}'
  timestamp-timezone: '{$timestamp.timezone}'
  timestamp-datetime: '{$timestamp.day}-{$timestamp.month}-{$timestamp.year}'
  timestamp-full: '{$timestamp.year}-{$timestamp.month}-{$timestamp.day} {$timestamp.hour}:{$timestamp.minute}:{$timestamp.second} {$timestamp.timezone}'
